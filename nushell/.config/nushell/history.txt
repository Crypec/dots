rm -rf nushell/
stow *
stow -S nushell
ls
stow -S --adopt nushell
cd nushell/
ls
cd ..
ls
cd ..
ls
rm description hooks/ index info objects/ refs HEAD branches/ COMMIT_EDITMSG
ls
rm logs/
stow -S --adopt *
ls
ls
stow -S --adopt .
rm refs objects/ logs index
ls
stow -S --adopt .
ls
cd .config/
ls
cd ..
ls
stow -D --adopt .
ls
rm description info/ hooks branches/ HEAD
rm COMMIT_EDITMSG
ls
stow --target=/home/simon */
ls
bash
ls
cd gtk-3.0/
ls
ls -a
cd ..
ls
bash
ls
clear
ls
mkdir gtk-3.0
mkdir gtk-3.0/.config/gtk-3.0
mv gtk-3.0/* ../.dots/gtk-3.0/.config/gtk-3.0/
ls -a gtk-3.0/
ls
cd dconf/
ls
cat user
cd ..
ls
mkdir pavucontrol
mv pavucontrol.ini ../.dots/pavucontrol/
ls
stow pavucontrol/
ls
cd pavucontrol/
ls
cd ..
ls
stow pavucontrol/
ls
cd ..
ls
mkdir pavucontrol/.config
mv pavucontrol/pavucontrol.ini pavucontrol/.config/
ls
stow pavucontrol/
ljs
ls
rm Makefile
ls
rm sxhkdrc
ls
clear
ls
bat pavucontrol.ini
cat pavucontrol.ini
stow pavucontrol/
ls
bat pavucontrol.ini
ls
cd ..
ls
cd simon/.config/
ls
cat ksysguardrc
clear
ls
cd `Signal Beta/`
ls
cd ..
ls
cd chromium/
ls
cd ..
ls
rm gtk-3.0/
stow gtk-3.0/
ls
ls
mkdir fish/.config/fish
mv fish/* ../.dots/fish/.config/fish/
ls
rm -rf fish
stow fish
ls -a
rm -rf fish
ls
ls
stow fish
cd fish/
ls
cd 
cd .config/
ls
rm -rf fish/
ls
cd fish/.config/fish/
ls
cd ..
ls
stow fish
ls
ls
cd ..
ls
cd ..
ls
stow fish
cd fish/
ls
cd completions/
ls
ls
ls -a
cd ..
ls
ls -a functions/
ls
cd ..
ls
git status
git add *
git commit -m "add config files for sxhkd,pavucontrol and fish"
ls
clear
git status
git add nushell/.config/nushell/history.txt
ls
git add Readme.md
ls
touch Readme.md
ls
cd ..
ls
cd ..
cd
cd .dots/
ls
cd fish/
ls
cd ..
ls
nvim helix/.config/helix/config.toml
hx
nvim .config/helix/config.toml
lsr
ls
hx
ls
rm -rf git polybar/ spotify/ sxhkd/ yay makepkg/ helix/ git 
ls
rm nushell/ pavucontrol.ini functions/ fish_variables completions/
ls
rm conf.d config.fish alacritty/ bspwm/
ls
hx
cd .config/
ls
cd fish
ls
cd conf.d/
ls
cd ..
ls -all
cd ..
ls
cd 
cd .config/fish/
ls
ls -all
nvim config.fish
ls
nvim .dots/nushell/
ls
cat .dots/Readme.md
ls
cd .dots/
ls
stow fish
ls
stow polybar/
ls
rm -rf fish
rm -rf fish
fish
ls
cd .config/
ls
cd fish/
ls
ls -a
ls -all
ls
cd ..
ls
rm -rf fish
fish
ls
nvim .config/fish
cd .config/fish
cd .config/
ls
cd 
cd
cd .config/
ls
cd fish/
ls
cd
cd .dots/
ls
mkdir fish/.config/fish
mv * /home/simon/.dots/fish/.config/fish/
ls
ls
cd fish/.config/fish/
ls
cd ..
ls
cd ..
rm -rf fish
ls
stow fish
ls
cd fish/ls
cd fish
ls
cd ..
ls
cd ..
ls
rm functions
stow fish
ls
rm fish_variables config.fish completions conf.d
ls
cd .config/
ls
tree discord/
ls
cd polybar/
ls
cd ..
ls
git add *
git commit -m "update dotfiles"
ls
git remote add origin git@github.com:Crypec/dots.git
git branch -M main
git push -u origin main
ls
git status
git add *
git commit -m "update dotfiles"
ls
cd
cd Pictures/
ls
mkdir wallpapers/Pictures/wallpapers
mv ../Pictures/wallpapers/space.jpg wallpapers/Pictures/wallpapers/
ls
rm -rf wallpapers/
stow wallpapers/
ls
cd wallpapers/
ls
cd ..
ls
cd .
cd
ls
git commit -m "update dotfiles"
ls
git add *
git commit -m "update dotfiles"
ls
cd .dots/
ls
nvim Readme.md
bat Readme.md
git add *
git status
git commit -m "update dotfiles"
git push -u origin main
mv Readme.md README.md
ls
git add *
git commit -m "update dotfiles"
ls
git commit -m "update dotfiles"
git add *
git commit -m "update dotfiles"
git push -u origin main
ls
nvim README.md
ls
git add *
git commit -m "update dotfiles"
git push -u origin main
ls
cd
ls
import
sudo pacman -S import
yay -S flameshot
sudo pacman -S flameshot
cd .dots/
ls
cd .dots/
ls
nvim README.md
git commit -am ""
ls
git commit -am "update dotfiles"
ls
git push -u origin main
nvim README.md
git commit -am "update dotfiles"
git push -u origin main
ls
git stauts
git status
git add *
git commit -am "update dotfiles"
git push -u origin main
ls
git
ls
cd
ls
clear
ls
clear
se
clear
yay -Syyu
cd 
ls
cd Code/secro/
ls
git status
nvim src/main.rs
cd Code/secro/
xrandr -q
clear
xrandr -q
nvim .config/bspwm/bspwmrc
++======_++___
clear
bacon
cargo run
bacon
cargo run
bacon
cargo run
hx src/main.rs
bacon
cargo run
bacon
cargo r
cargo add rayon
cargo run
clear
 cargo run
cargo run --release
cargo run
cargo f
cargo fmt
cargo run
nvim .config/bspwm/bspwmrc
hx src/main.rs
cargo run
bacon
cargo run --release
cargo run
cargo urn
cargo run
cargo fmt
cargo run
cargo fmt
cargo run
stack run
cargo run
stack run
cargo run
 cargo run
cargo run
bacon run
cargo run
cargo ruyn
cargo run
cargo run --release
cargo run
hx src/main.rs
code .
cargo run --release
bacon
nvim src/main.rs
cargo run
cargo run --release
cargo run
cargo urn
cargo r
cargo run
cargo r
cargo run
clear
cargo run 
cargo run
stack run
cargo r
cargo run
cargo run --release
cargo fmt
cargo run
cargo run --release
cargi
cargo run
cargo run --release
cargo fmt
cargo run
hx src/main.rs
cargo fmt
cargo run
cargo urn
cargo run
cargo fmt
cargo run
cargo fmt
bacon
cargo fmt
cargo run
cargo fmt
cargo run
cargo urn
cargo r
cd Code/secro/
ls
cd Code/sec
cd Code/secro
ls
clear
ls
cargo r
cd Code/secro
ls
cd Code/secro
ls
hx src/main.rs
cd Code/secro/
ls
cd Code/secro/
cargo r
bacon 
cargo clippy
cargo run --release
clear
nvim rooms.txt
cat rooms.txt
cat rooms.txt | grep mellerowicz
nvim rooms.txt
ls
lines 
lc -l rooms.txt
ls
lc rooms.txt
wc rooms.txt
wc -l rooms.txt
clear
cd Code/secro
ls
cargo run
cargo fmt
cargo clippy
cargo fix
cargo fix --allow-dirty
cargo clippy
:The suggestion may be what the user intended, but it is uncertain. The suggestion should result in valid Rust code if it is applied.
cargo run
cargo clippy
cargo run
xset r rate 150 200
xset r rate 200 150
xset r rate 200 100
cargo fmt
cargo run
If nothing else works, and if you are using the Xorg (i.e. not Wayland), try running xset r rate 220 40 from a console.
cargo run
cargo clippy
cargo run
clear
cargo clippy
clear
cargo run --release
clear
rm rooms.txt
clear
cd Code/secro
ls
cargo add itertools
cargo run
clear
cargo add derivative
cargo remove derivative
cargo run --release
cargo add educe
cargo run
cargo r
cargo run
clear
clear
rm rooms.txt
cargo run --release
hx src/main.rs
let-env RAYON_NUM_THREADS=16 
let-env RAYON_NUM_THREADS = '16'
echo $RAYON_NUM_THREADS
echo $env.RAYON_NUM_THREADS
cd Code/secro/
ls
git status
cargo run --release
clear
cd Code/secro/ls
cd Code/secro/
ls
clear
git status
git log
clear
git add *
git commit -m "initial commit"
ls
git status
git remote add origin git@github.com:Crypec/secro.git
git branch -M main
git push -u origin main
ls
cd
ls
reboot
ls
clear
yay -Syyu
sudo mkinitcpio -P
ls
history
history | grep grup
history | grep grub
sudo grub-mkconfig -o /boot/grub/grub.cfg
clear
cd Code/
ls
cd zuse/
ls
git status
ls
git diff Cargo.lock
ls
nvim compiler/konrad_hir/src/
cd .dots
git status
